[
    {
        "id": "c9fc6dfb32778bf8",
        "type": "tab",
        "label": "Websocket client",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "888786c5.d5aab8",
        "type": "subflow",
        "name": "FIFO",
        "info": "# FIFO\n## First in First Out subflow\nThis flow receives a series of msg.payloads and builds a queue using FIFO (First in First out) method. The LIFO size is configurabe through subflow enviroment variables.\n\n### Input\n`msg.topic == put`\nWill add the `msg.payload` to the end of the array. Everytime a new item is received the second output sends the complete queue.\n\n`msg.topic == get`\nWill remove the first item of the stack and will send it in the first output\n\n`msg.topic == list`\nSends the complete list on the second output.\n\n### Output 1\nThe first item on the top of the stack. It is sent only when `msg.topic == get`.\n\n### Output 2\nThe complete queue in Array format. It is sent everytime a new item is added, removed or when `msg.topic == list`\n\n### Status\nAlways show the queue size.\n\n### Enviroment Variables\n`Buffer_Size` defines the size of the queue. If a new item arrives and the queue is full, the oldest item will be removed.",
        "category": "",
        "in": [
            {
                "x": 140,
                "y": 120,
                "wires": [
                    {
                        "id": "5ce94b12.5c1c44"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 640,
                "y": 60,
                "wires": [
                    {
                        "id": "a6ca9e09.83012",
                        "port": 0
                    }
                ]
            },
            {
                "x": 920,
                "y": 220,
                "wires": [
                    {
                        "id": "ad0059b4.1b2978",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "Buffer_Size",
                "type": "num",
                "value": "6"
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "icon": "font-awesome/fa-ellipsis-v",
        "status": {
            "x": 920,
            "y": 300,
            "wires": [
                {
                    "id": "ad0059b4.1b2978",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "ab98bbb101eb566b",
        "type": "junction",
        "z": "c9fc6dfb32778bf8",
        "x": 460,
        "y": 260,
        "wires": [
            [
                "26fad1859df6c392"
            ]
        ]
    },
    {
        "id": "e479ed6946a57a50",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.emqx.io",
        "port": "8883",
        "tls": "",
        "clientid": "easycat-s",
        "autoConnect": true,
        "usetls": true,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "f74bed25c3b2c826",
        "type": "websocket-listener",
        "path": "/test/w5100",
        "wholemsg": "false"
    },
    {
        "id": "5ce94b12.5c1c44",
        "type": "switch",
        "z": "888786c5.d5aab8",
        "name": "Topic",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "get",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "put",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "list",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 270,
        "y": 120,
        "wires": [
            [
                "a6ca9e09.83012"
            ],
            [
                "feb761ec.4c293"
            ],
            [
                "d22ee914.d446d8"
            ],
            [
                "d22ee914.d446d8"
            ]
        ]
    },
    {
        "id": "feb761ec.4c293",
        "type": "function",
        "z": "888786c5.d5aab8",
        "name": "put",
        "func": "var queue = flow.get(\"queue\")\n\n\nif (!Array.isArray(queue)){\n    queue = [];\n}else if ( queue.length >= env.get(\"Buffer_Size\") ){\n    queue.pop(1);\n}\n\nqueue.unshift(msg.payload);\n\nflow.set(\"queue\", queue);\nmsg.payload = queue;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 100,
        "wires": [
            [
                "d22ee914.d446d8"
            ]
        ]
    },
    {
        "id": "a6ca9e09.83012",
        "type": "function",
        "z": "888786c5.d5aab8",
        "name": "get",
        "func": "var queue = flow.get(\"queue\")\nvar item;\n\nif (!Array.isArray(queue)){\n    queue = [];\n}else{\n    item = queue.pop(1);\n}\n\n\nflow.set(\"queue\", queue)\nmsg.payload = item;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 60,
        "wires": [
            [
                "d22ee914.d446d8"
            ]
        ]
    },
    {
        "id": "d22ee914.d446d8",
        "type": "change",
        "z": "888786c5.d5aab8",
        "name": "list",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "queue",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 260,
        "wires": [
            [
                "ad0059b4.1b2978"
            ]
        ]
    },
    {
        "id": "ad0059b4.1b2978",
        "type": "change",
        "z": "888786c5.d5aab8",
        "name": "Count",
        "rules": [
            {
                "t": "set",
                "p": "fifo_size",
                "pt": "msg",
                "to": "$count(msg.payload)\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "95013bf1172998f0",
        "type": "websocket in",
        "z": "c9fc6dfb32778bf8",
        "name": "",
        "server": "f74bed25c3b2c826",
        "client": "",
        "x": 120,
        "y": 260,
        "wires": [
            [
                "182d7097b7754243"
            ]
        ]
    },
    {
        "id": "26fad1859df6c392",
        "type": "debug",
        "z": "c9fc6dfb32778bf8",
        "name": "byte0",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.payload.byte0",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 530,
        "y": 260,
        "wires": []
    },
    {
        "id": "8c3e07640e696509",
        "type": "websocket out",
        "z": "c9fc6dfb32778bf8",
        "name": "",
        "server": "f74bed25c3b2c826",
        "client": "",
        "x": 520,
        "y": 60,
        "wires": []
    },
    {
        "id": "71dbb8b3e031ce82",
        "type": "function",
        "z": "c9fc6dfb32778bf8",
        "name": "Request Payload",
        "func": "msg.payload = {};\nmsg.payload[msg.topic]=msg.value;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 335,
        "y": 60,
        "wires": [
            [
                "8c3e07640e696509"
            ]
        ],
        "l": false
    },
    {
        "id": "bb35a197276ba7a8",
        "type": "inject",
        "z": "c9fc6dfb32778bf8",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.5",
        "topic": "byte5",
        "x": 110,
        "y": 60,
        "wires": [
            [
                "06119ea3974d429f"
            ]
        ]
    },
    {
        "id": "182d7097b7754243",
        "type": "json",
        "z": "c9fc6dfb32778bf8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 310,
        "y": 260,
        "wires": [
            [
                "bf950bdb15f5b056",
                "3a025370e029f2b2",
                "f4002139fbf04f38",
                "dbbd61e0732e80c3"
            ]
        ]
    },
    {
        "id": "06119ea3974d429f",
        "type": "random",
        "z": "c9fc6dfb32778bf8",
        "name": "",
        "low": "0",
        "high": "255",
        "inte": "true",
        "property": "value",
        "x": 265,
        "y": 60,
        "wires": [
            [
                "71dbb8b3e031ce82"
            ]
        ],
        "l": false
    },
    {
        "id": "9e79f58386e0b57d",
        "type": "inject",
        "z": "c9fc6dfb32778bf8",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.5",
        "topic": "byte10",
        "x": 110,
        "y": 120,
        "wires": [
            [
                "06119ea3974d429f"
            ]
        ]
    },
    {
        "id": "b1fdbccb1e995769",
        "type": "inject",
        "z": "c9fc6dfb32778bf8",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0.5",
        "topic": "byte15",
        "x": 110,
        "y": 180,
        "wires": [
            [
                "06119ea3974d429f"
            ]
        ]
    },
    {
        "id": "bf950bdb15f5b056",
        "type": "switch",
        "z": "c9fc6dfb32778bf8",
        "name": "",
        "property": "payload.payload.byte0",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "",
                "vt": "prev"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 435,
        "y": 260,
        "wires": [
            [
                "ab98bbb101eb566b"
            ]
        ],
        "l": false
    },
    {
        "id": "3a025370e029f2b2",
        "type": "switch",
        "z": "c9fc6dfb32778bf8",
        "name": "",
        "property": "payload.payload.byte1",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "",
                "vt": "prev"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 435,
        "y": 320,
        "wires": [
            [
                "104e821f0926d19b"
            ]
        ],
        "l": false
    },
    {
        "id": "f4002139fbf04f38",
        "type": "switch",
        "z": "c9fc6dfb32778bf8",
        "name": "",
        "property": "payload.payload.byte2",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "",
                "vt": "prev"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 435,
        "y": 380,
        "wires": [
            [
                "871483672ad404e3"
            ]
        ],
        "l": false
    },
    {
        "id": "dbbd61e0732e80c3",
        "type": "switch",
        "z": "c9fc6dfb32778bf8",
        "name": "",
        "property": "payload.payload.byte3",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "",
                "vt": "prev"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 435,
        "y": 440,
        "wires": [
            [
                "48e87b866f2770f3"
            ]
        ],
        "l": false
    },
    {
        "id": "104e821f0926d19b",
        "type": "debug",
        "z": "c9fc6dfb32778bf8",
        "name": "byte1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.payload.byte1",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 530,
        "y": 320,
        "wires": []
    },
    {
        "id": "871483672ad404e3",
        "type": "debug",
        "z": "c9fc6dfb32778bf8",
        "name": "byte2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.payload.byte2",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 530,
        "y": 380,
        "wires": []
    },
    {
        "id": "48e87b866f2770f3",
        "type": "debug",
        "z": "c9fc6dfb32778bf8",
        "name": "byte3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload.payload.byte3",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 530,
        "y": 440,
        "wires": []
    }
]
